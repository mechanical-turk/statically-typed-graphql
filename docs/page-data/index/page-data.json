{"componentChunkName":"component---node-modules-gatsby-theme-apollo-docs-src-components-template-js","path":"/","result":{"data":{"site":{"pathPrefix":"","siteMetadata":{"title":"Uniform GraphQL Docs","description":"How to use the Uniform GraphQL Library"}},"file":{"childMarkdownRemark":null,"childMdx":{"frontmatter":{"title":"Introduction","description":"Code-first GraphQL apis in TypeScript with complete end-to-end type safety"},"headings":[{"value":"Features","depth":2},{"value":"Community","depth":2}],"fields":{"image":"https://res.cloudinary.com/dcdgni1xm/image/upload/w_1280,h_669,c_fill,q_auto,f_auto/w_1160,c_fit,co_rgb:000000,g_south_west,x_64,y_390,l_text:Montserrat_72_bold:Introduction/w_1160,c_fit,co_rgb:000000,g_north_west,x_64,y_299,l_text:PT%20Mono_48:Code-first%20GraphQL%20apis%20in%20TypeScript%20with%20complete%20end-to-end%20type%20safety./social-card_lk00wb","apiReference":false},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Introduction\",\n  \"description\": \"Code-first GraphQL apis in TypeScript with complete end-to-end type safety\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Welcome! \\uD83D\\uDC4B \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"Uniform GraphQL\"), \" is a library for building \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"GraphQL\"), \" apis in \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"TypeScript\"), \".\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/screenshots/membership-enum.gif\",\n    \"alt\": \"Type Safety First Example\"\n  })), mdx(\"h2\", {\n    \"id\": \"features\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#features\",\n    \"aria-label\": \"features permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Features\"), mdx(\"p\", null, \"\\uD83E\\uDD1D Uniform type system: write once in TypeScript, get GraphQL schema for free.\"), mdx(\"p\", null, \"\\uD83D\\uDC68\\u200D\\uD83D\\uDCBB Code-first by default, but can be partially used as schema-first.\"), mdx(\"p\", null, \"\\uD83D\\uDE80 No code generation. Your code becomes instantly usable.\"), mdx(\"p\", null, \"\\uD83D\\uDD2C Sophisticated type system adjusted to the complexities of GraphQL.\"), mdx(\"p\", null, \"\\uD83D\\uDCA1 Single source of truth for your api.\"), mdx(\"p\", null, \"\\uD83D\\uDE0C No manual typecasting, no decorators, no runtime type checking.\"), mdx(\"h2\", {\n    \"id\": \"community\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#community\",\n    \"aria-label\": \"community permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Community\"), mdx(\"p\", null, \"This has been a solo effort for the first 4 months, and it's ready to get some feedback and hopefully become a group effort. If you're interested, check out our community links. Any feedback or questions you have, I'll be happy to take them on the official \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://gitter.im/UniformGraphQL/community\"\n  }, \"Gitter\"), \"!\"), mdx(\"hr\", null), mdx(\"sub\", null, \"Disclaimer: This library is not production ready. Check out our\", ' ', mdx(\"a\", {\n    target: \"_blank\",\n    href: \"https://github.com/whats-good/uniform-graphql#roadmap\"\n  }, \"roadmap\"), ' ', \"for more information.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},"pageContext":{"id":"f894cfc9-b47e-5818-91b0-48e9b06a6ece","versionDifference":0,"versionBasePath":"/vdefault","sidebarContents":[{"title":null,"pages":[{"title":"Introduction","sidebarTitle":"","description":"Code-first GraphQL apis in TypeScript with complete end-to-end type safety","path":"/"},{"title":"Get Started","sidebarTitle":"","description":"A quick overview of our workflow","path":"/get-started/"},{"title":"Why Uniform GraphQL","sidebarTitle":"","description":"The motivation and philosophy behind Uniform GraphQL","path":"/why-uniform-graphql/"}]},{"title":"Tutorial","pages":[{"title":"Setup","sidebarTitle":"0. Setup","description":"Install dependencies and serve your first schema","path":"/tutorial/setup/"},{"title":"Primitive Types","sidebarTitle":"1. Primitive Types","description":"Learn how to create and use primitive types","path":"/tutorial/primitive-types/"},{"title":"Complex Types","sidebarTitle":"2. Complex Types","description":"Combine simple types into complex types","path":"/tutorial/complex-types/"},{"title":"Resolvers","sidebarTitle":"3. Resolvers","description":"Learn how to create resolvers in Uniform GraphQL.","path":"/tutorial/resolvers/"}]},{"title":"Types","pages":[{"title":"Scalars","sidebarTitle":"","description":null,"path":"/types/scalars/"},{"title":"Enums","sidebarTitle":"","description":null,"path":"/types/enums/"},{"title":"Objects","sidebarTitle":"","description":null,"path":"/types/objects/"},{"title":"Input Objects","sidebarTitle":"","description":null,"path":"/types/input-objects/"},{"title":"Lists","sidebarTitle":"","description":null,"path":"/types/lists/"},{"title":"Interfaces","sidebarTitle":"","description":null,"path":"/types/interfaces/"},{"title":"Unions","sidebarTitle":"","description":null,"path":"/types/unions/"}]},{"title":"Further Reading","pages":[{"title":"Nullability","sidebarTitle":"","description":null,"path":"/further-reading/nullability/"},{"title":"Input & Output Types","sidebarTitle":"","description":null,"path":"/further-reading/input-and-output-types/"}]},{"title":"Community","pages":[{"anchor":true,"title":"GitHub","path":"https://github.com/whats-good/uniform-graphql"},{"anchor":true,"title":"Gitter","path":"https://gitter.im/UniformGraphQL/community"}]}],"githubUrl":"https://github.com/whats-good/uniform-graphql/tree/master/docs-src/source/index.mdx","twitterHandle":"MechanicalKazan","versions":[],"defaultVersion":"default","baseUrl":"https://uniform-graphql.whatsgood.dog"}},"staticQueryHashes":["1511030359","2468095761","2468095761"]}